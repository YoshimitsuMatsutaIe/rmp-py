import numpy as np
from math import cos as c
from math import sin as s
from math import tan as ta
from math import sqrt as sq
from numba import jit, njit
import time

d1 = 0.333
d3 = 0.316
d5 = 0.384
df = 0.107
a4 = 0.0825
a5 = -0.0825
a7 = 0.088

def o_0(q):
    return np.array([[0], [0], [d1]], dtype=np.float64)

def o_1(q):
    return np.array([[0], [0], [d1]])
def o_2(q):
    return np.array([[d3*s(q[1, 0])*c(q[0, 0])], [d3*s(q[0, 0])*s(q[1, 0])], [d1 + d3*c(q[1, 0])]])
def o_3(q):
    return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + d3*s(q[1, 0])*c(q[0, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + d3*s(q[0, 0])*s(q[1, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) + d1 + d3*c(q[1, 0])]])
def o_4(q):
    return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]])
def o_5(q):
    return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]])
def o_6(q):
    return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*s(q[5, 0]) - a7*s(q[0, 0])*s(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[4, 0])*c(q[2, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*c(q[0, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0]) - a7*s(q[2, 0])*s(q[4, 0])*c(q[0, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a7*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[5, 0])*c(q[3, 0]) - a7*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0]) + a7*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[2, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0]) + a7*s(q[2, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[4, 0])*c(q[0, 0])*c(q[2, 0])*c(q[5, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + a7*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[2, 0]) - a7*s(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[3, 0])*c(q[1, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[5, 0])*c(q[1, 0])*c(q[3, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]])
def o_ee(q):
    return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*s(q[5, 0]) - a7*s(q[0, 0])*s(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[4, 0])*c(q[2, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*c(q[0, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0]) - a7*s(q[2, 0])*s(q[4, 0])*c(q[0, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a7*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*c(q[5, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[5, 0])*c(q[3, 0])*c(q[4, 0]) - df*s(q[0, 0])*s(q[4, 0])*s(q[5, 0])*c(q[2, 0]) + df*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[4, 0]) - df*s(q[1, 0])*c(q[0, 0])*c(q[3, 0])*c(q[5, 0]) - df*s(q[2, 0])*s(q[4, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0]) + df*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[5, 0]) + df*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[5, 0])*c(q[3, 0]) - a7*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0]) + a7*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[2, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0]) + a7*s(q[2, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[4, 0])*c(q[0, 0])*c(q[2, 0])*c(q[5, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0]) + df*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[4, 0]) - df*s(q[0, 0])*s(q[1, 0])*c(q[3, 0])*c(q[5, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*s(q[5, 0])*c(q[1, 0]) + df*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0])*c(q[5, 0]) + df*s(q[0, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])*c(q[5, 0]) + df*s(q[2, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[4, 0])*s(q[5, 0])*c(q[0, 0])*c(q[2, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + a7*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[2, 0]) - a7*s(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[3, 0])*c(q[1, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[5, 0])*c(q[1, 0])*c(q[3, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0]) + df*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*s(q[5, 0]) - df*s(q[1, 0])*s(q[3, 0])*c(q[2, 0])*c(q[5, 0]) - df*s(q[1, 0])*s(q[5, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[4, 0]) - df*c(q[1, 0])*c(q[3, 0])*c(q[5, 0])]])


@njit("(f8[:, :](f8[:, :], i8, f8, f8, f8, f8, f8, f8, f8))")
def o(q, n, d1, d3, d5, df, a4, a5, a7):
    if n == 0:
        return np.array([[0.], [0.], [d1]], dtype=np.float64)
    elif n == 1:
        return np.array([[0.], [0.], [d1]], dtype=np.float64)
    elif n == 2:
        return np.array([[d3*s(q[1, 0])*c(q[0, 0])], [d3*s(q[0, 0])*s(q[1, 0])], [d1 + d3*c(q[1, 0])]], dtype=np.float64)
    elif n == 3:
        return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + d3*s(q[1, 0])*c(q[0, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + d3*s(q[0, 0])*s(q[1, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) + d1 + d3*c(q[1, 0])]], dtype=np.float64)
    elif n == 4:
        return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]], dtype=np.float64)
    elif n == 5:
        return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]], dtype=np.float64)
    elif n == 6:
        return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*s(q[5, 0]) - a7*s(q[0, 0])*s(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[4, 0])*c(q[2, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*c(q[0, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0]) - a7*s(q[2, 0])*s(q[4, 0])*c(q[0, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a7*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[5, 0])*c(q[3, 0]) - a7*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0]) + a7*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[2, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0]) + a7*s(q[2, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[4, 0])*c(q[0, 0])*c(q[2, 0])*c(q[5, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + a7*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[2, 0]) - a7*s(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[3, 0])*c(q[1, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[5, 0])*c(q[1, 0])*c(q[3, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0])]], dtype=np.float64)
    elif n == 7:
        return np.array([[-a4*s(q[0, 0])*s(q[2, 0]) + a4*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - a5*s(q[0, 0])*s(q[2, 0])*c(q[3, 0]) + a5*s(q[1, 0])*s(q[3, 0])*c(q[0, 0]) + a5*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*s(q[5, 0]) - a7*s(q[0, 0])*s(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[4, 0])*c(q[2, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*c(q[0, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0]) - a7*s(q[2, 0])*s(q[4, 0])*c(q[0, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a7*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + d3*s(q[1, 0])*c(q[0, 0]) + d5*s(q[0, 0])*s(q[2, 0])*s(q[3, 0]) + d5*s(q[1, 0])*c(q[0, 0])*c(q[3, 0]) - d5*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[3, 0])*c(q[5, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[5, 0])*c(q[3, 0])*c(q[4, 0]) - df*s(q[0, 0])*s(q[4, 0])*s(q[5, 0])*c(q[2, 0]) + df*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0])*c(q[4, 0]) - df*s(q[1, 0])*c(q[0, 0])*c(q[3, 0])*c(q[5, 0]) - df*s(q[2, 0])*s(q[4, 0])*s(q[5, 0])*c(q[0, 0])*c(q[1, 0]) + df*s(q[3, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[5, 0]) + df*s(q[5, 0])*c(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])], [a4*s(q[0, 0])*c(q[1, 0])*c(q[2, 0]) + a4*s(q[2, 0])*c(q[0, 0]) + a5*s(q[0, 0])*s(q[1, 0])*s(q[3, 0]) + a5*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[2, 0])*c(q[0, 0])*c(q[3, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[0, 0])*s(q[1, 0])*s(q[5, 0])*c(q[3, 0]) - a7*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*c(q[1, 0])*c(q[5, 0]) - a7*s(q[0, 0])*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0]) + a7*s(q[0, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) - a7*s(q[2, 0])*s(q[3, 0])*s(q[5, 0])*c(q[0, 0]) + a7*s(q[2, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[4, 0])*c(q[0, 0])*c(q[2, 0])*c(q[5, 0]) + d3*s(q[0, 0])*s(q[1, 0]) + d5*s(q[0, 0])*s(q[1, 0])*c(q[3, 0]) - d5*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0]) - d5*s(q[2, 0])*s(q[3, 0])*c(q[0, 0]) + df*s(q[0, 0])*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[4, 0]) - df*s(q[0, 0])*s(q[1, 0])*c(q[3, 0])*c(q[5, 0]) - df*s(q[0, 0])*s(q[2, 0])*s(q[4, 0])*s(q[5, 0])*c(q[1, 0]) + df*s(q[0, 0])*s(q[3, 0])*c(q[1, 0])*c(q[2, 0])*c(q[5, 0]) + df*s(q[0, 0])*s(q[5, 0])*c(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[2, 0])*s(q[3, 0])*c(q[0, 0])*c(q[5, 0]) + df*s(q[2, 0])*s(q[5, 0])*c(q[0, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[4, 0])*s(q[5, 0])*c(q[0, 0])*c(q[2, 0])], [-a4*s(q[1, 0])*c(q[2, 0]) - a5*s(q[1, 0])*c(q[2, 0])*c(q[3, 0]) + a5*s(q[3, 0])*c(q[1, 0]) + a7*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*c(q[5, 0]) + a7*s(q[1, 0])*s(q[3, 0])*s(q[5, 0])*c(q[2, 0]) - a7*s(q[1, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[3, 0])*c(q[1, 0])*c(q[4, 0])*c(q[5, 0]) + a7*s(q[5, 0])*c(q[1, 0])*c(q[3, 0]) + d1 + d3*c(q[1, 0]) + d5*s(q[1, 0])*s(q[3, 0])*c(q[2, 0]) + d5*c(q[1, 0])*c(q[3, 0]) + df*s(q[1, 0])*s(q[2, 0])*s(q[4, 0])*s(q[5, 0]) - df*s(q[1, 0])*s(q[3, 0])*c(q[2, 0])*c(q[5, 0]) - df*s(q[1, 0])*s(q[5, 0])*c(q[2, 0])*c(q[3, 0])*c(q[4, 0]) + df*s(q[3, 0])*s(q[5, 0])*c(q[1, 0])*c(q[4, 0]) - df*c(q[1, 0])*c(q[3, 0])*c(q[5, 0])]], dtype=np.float64)
    else:
        assert(False)


def o_0_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[0], [0], [d1]], dtype=np.float64)
def o_1_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[0], [0], [d1]])
def o_2_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[d3*s(q1)*c(q0)], [d3*s(q0)*s(q1)], [d1 + d3*c(q1)]])
def o_3_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) + d3*s(q1)*c(q0)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + d3*s(q0)*s(q1)], [-a4*s(q1)*c(q2) + d1 + d3*c(q1)]])
def o_4_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]])
def o_5_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]])
def o_6_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + a7*s(q0)*s(q2)*s(q3)*s(q5) - a7*s(q0)*s(q2)*c(q3)*c(q4)*c(q5) - a7*s(q0)*s(q4)*c(q2)*c(q5) + a7*s(q1)*s(q3)*c(q0)*c(q4)*c(q5) + a7*s(q1)*s(q5)*c(q0)*c(q3) - a7*s(q2)*s(q4)*c(q0)*c(q1)*c(q5) - a7*s(q3)*s(q5)*c(q0)*c(q1)*c(q2) + a7*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + a7*s(q0)*s(q1)*s(q3)*c(q4)*c(q5) + a7*s(q0)*s(q1)*s(q5)*c(q3) - a7*s(q0)*s(q2)*s(q4)*c(q1)*c(q5) - a7*s(q0)*s(q3)*s(q5)*c(q1)*c(q2) + a7*s(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) - a7*s(q2)*s(q3)*s(q5)*c(q0) + a7*s(q2)*c(q0)*c(q3)*c(q4)*c(q5) + a7*s(q4)*c(q0)*c(q2)*c(q5) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + a7*s(q1)*s(q2)*s(q4)*c(q5) + a7*s(q1)*s(q3)*s(q5)*c(q2) - a7*s(q1)*c(q2)*c(q3)*c(q4)*c(q5) + a7*s(q3)*c(q1)*c(q4)*c(q5) + a7*s(q5)*c(q1)*c(q3) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]])
def o_ee_2(q):
    q0, q1, q2, q3, q4, q5, q6 = np.ravel(q).tolist()
    return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + a7*s(q0)*s(q2)*s(q3)*s(q5) - a7*s(q0)*s(q2)*c(q3)*c(q4)*c(q5) - a7*s(q0)*s(q4)*c(q2)*c(q5) + a7*s(q1)*s(q3)*c(q0)*c(q4)*c(q5) + a7*s(q1)*s(q5)*c(q0)*c(q3) - a7*s(q2)*s(q4)*c(q0)*c(q1)*c(q5) - a7*s(q3)*s(q5)*c(q0)*c(q1)*c(q2) + a7*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2) - df*s(q0)*s(q2)*s(q3)*c(q5) - df*s(q0)*s(q2)*s(q5)*c(q3)*c(q4) - df*s(q0)*s(q4)*s(q5)*c(q2) + df*s(q1)*s(q3)*s(q5)*c(q0)*c(q4) - df*s(q1)*c(q0)*c(q3)*c(q5) - df*s(q2)*s(q4)*s(q5)*c(q0)*c(q1) + df*s(q3)*c(q0)*c(q1)*c(q2)*c(q5) + df*s(q5)*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + a7*s(q0)*s(q1)*s(q3)*c(q4)*c(q5) + a7*s(q0)*s(q1)*s(q5)*c(q3) - a7*s(q0)*s(q2)*s(q4)*c(q1)*c(q5) - a7*s(q0)*s(q3)*s(q5)*c(q1)*c(q2) + a7*s(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) - a7*s(q2)*s(q3)*s(q5)*c(q0) + a7*s(q2)*c(q0)*c(q3)*c(q4)*c(q5) + a7*s(q4)*c(q0)*c(q2)*c(q5) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0) + df*s(q0)*s(q1)*s(q3)*s(q5)*c(q4) - df*s(q0)*s(q1)*c(q3)*c(q5) - df*s(q0)*s(q2)*s(q4)*s(q5)*c(q1) + df*s(q0)*s(q3)*c(q1)*c(q2)*c(q5) + df*s(q0)*s(q5)*c(q1)*c(q2)*c(q3)*c(q4) + df*s(q2)*s(q3)*c(q0)*c(q5) + df*s(q2)*s(q5)*c(q0)*c(q3)*c(q4) + df*s(q4)*s(q5)*c(q0)*c(q2)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + a7*s(q1)*s(q2)*s(q4)*c(q5) + a7*s(q1)*s(q3)*s(q5)*c(q2) - a7*s(q1)*c(q2)*c(q3)*c(q4)*c(q5) + a7*s(q3)*c(q1)*c(q4)*c(q5) + a7*s(q5)*c(q1)*c(q3) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3) + df*s(q1)*s(q2)*s(q4)*s(q5) - df*s(q1)*s(q3)*c(q2)*c(q5) - df*s(q1)*s(q5)*c(q2)*c(q3)*c(q4) + df*s(q3)*s(q5)*c(q1)*c(q4) - df*c(q1)*c(q3)*c(q5)]])


@njit("(f8[:, :](f8[:, :], i8, f8, f8, f8, f8, f8, f8, f8))")
def o2(q, n, d1, d3, d5, df, a4, a5, a7):
    q0 = q[0, 0]
    q1 = q[1, 0]
    q2 = q[2, 0]
    q3 = q[3, 0]
    q4 = q[4, 0]
    q5 = q[5, 0]
    q6 = q[6, 0]
    if n == 0:
        return np.array([[0.], [0.], [d1]], dtype=np.float64)
    elif n == 1:
        return np.array([[0.], [0.], [d1]], dtype=np.float64)
    elif n == 2:
        return np.array([[d3*s(q1)*c(q0)], [d3*s(q0)*s(q1)], [d1 + d3*c(q1)]], dtype=np.float64)
    elif n == 3:
        return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) + d3*s(q1)*c(q0)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + d3*s(q0)*s(q1)], [-a4*s(q1)*c(q2) + d1 + d3*c(q1)]], dtype=np.float64)
    elif n == 4:
        return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]], dtype=np.float64)
    elif n == 5:
        return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]], dtype=np.float64)
    elif n == 6:
        return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + a7*s(q0)*s(q2)*s(q3)*s(q5) - a7*s(q0)*s(q2)*c(q3)*c(q4)*c(q5) - a7*s(q0)*s(q4)*c(q2)*c(q5) + a7*s(q1)*s(q3)*c(q0)*c(q4)*c(q5) + a7*s(q1)*s(q5)*c(q0)*c(q3) - a7*s(q2)*s(q4)*c(q0)*c(q1)*c(q5) - a7*s(q3)*s(q5)*c(q0)*c(q1)*c(q2) + a7*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + a7*s(q0)*s(q1)*s(q3)*c(q4)*c(q5) + a7*s(q0)*s(q1)*s(q5)*c(q3) - a7*s(q0)*s(q2)*s(q4)*c(q1)*c(q5) - a7*s(q0)*s(q3)*s(q5)*c(q1)*c(q2) + a7*s(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) - a7*s(q2)*s(q3)*s(q5)*c(q0) + a7*s(q2)*c(q0)*c(q3)*c(q4)*c(q5) + a7*s(q4)*c(q0)*c(q2)*c(q5) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + a7*s(q1)*s(q2)*s(q4)*c(q5) + a7*s(q1)*s(q3)*s(q5)*c(q2) - a7*s(q1)*c(q2)*c(q3)*c(q4)*c(q5) + a7*s(q3)*c(q1)*c(q4)*c(q5) + a7*s(q5)*c(q1)*c(q3) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3)]], dtype=np.float64)
    elif n == 7:
        return np.array([[-a4*s(q0)*s(q2) + a4*c(q0)*c(q1)*c(q2) - a5*s(q0)*s(q2)*c(q3) + a5*s(q1)*s(q3)*c(q0) + a5*c(q0)*c(q1)*c(q2)*c(q3) + a7*s(q0)*s(q2)*s(q3)*s(q5) - a7*s(q0)*s(q2)*c(q3)*c(q4)*c(q5) - a7*s(q0)*s(q4)*c(q2)*c(q5) + a7*s(q1)*s(q3)*c(q0)*c(q4)*c(q5) + a7*s(q1)*s(q5)*c(q0)*c(q3) - a7*s(q2)*s(q4)*c(q0)*c(q1)*c(q5) - a7*s(q3)*s(q5)*c(q0)*c(q1)*c(q2) + a7*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) + d3*s(q1)*c(q0) + d5*s(q0)*s(q2)*s(q3) + d5*s(q1)*c(q0)*c(q3) - d5*s(q3)*c(q0)*c(q1)*c(q2) - df*s(q0)*s(q2)*s(q3)*c(q5) - df*s(q0)*s(q2)*s(q5)*c(q3)*c(q4) - df*s(q0)*s(q4)*s(q5)*c(q2) + df*s(q1)*s(q3)*s(q5)*c(q0)*c(q4) - df*s(q1)*c(q0)*c(q3)*c(q5) - df*s(q2)*s(q4)*s(q5)*c(q0)*c(q1) + df*s(q3)*c(q0)*c(q1)*c(q2)*c(q5) + df*s(q5)*c(q0)*c(q1)*c(q2)*c(q3)*c(q4)], [a4*s(q0)*c(q1)*c(q2) + a4*s(q2)*c(q0) + a5*s(q0)*s(q1)*s(q3) + a5*s(q0)*c(q1)*c(q2)*c(q3) + a5*s(q2)*c(q0)*c(q3) + a7*s(q0)*s(q1)*s(q3)*c(q4)*c(q5) + a7*s(q0)*s(q1)*s(q5)*c(q3) - a7*s(q0)*s(q2)*s(q4)*c(q1)*c(q5) - a7*s(q0)*s(q3)*s(q5)*c(q1)*c(q2) + a7*s(q0)*c(q1)*c(q2)*c(q3)*c(q4)*c(q5) - a7*s(q2)*s(q3)*s(q5)*c(q0) + a7*s(q2)*c(q0)*c(q3)*c(q4)*c(q5) + a7*s(q4)*c(q0)*c(q2)*c(q5) + d3*s(q0)*s(q1) + d5*s(q0)*s(q1)*c(q3) - d5*s(q0)*s(q3)*c(q1)*c(q2) - d5*s(q2)*s(q3)*c(q0) + df*s(q0)*s(q1)*s(q3)*s(q5)*c(q4) - df*s(q0)*s(q1)*c(q3)*c(q5) - df*s(q0)*s(q2)*s(q4)*s(q5)*c(q1) + df*s(q0)*s(q3)*c(q1)*c(q2)*c(q5) + df*s(q0)*s(q5)*c(q1)*c(q2)*c(q3)*c(q4) + df*s(q2)*s(q3)*c(q0)*c(q5) + df*s(q2)*s(q5)*c(q0)*c(q3)*c(q4) + df*s(q4)*s(q5)*c(q0)*c(q2)], [-a4*s(q1)*c(q2) - a5*s(q1)*c(q2)*c(q3) + a5*s(q3)*c(q1) + a7*s(q1)*s(q2)*s(q4)*c(q5) + a7*s(q1)*s(q3)*s(q5)*c(q2) - a7*s(q1)*c(q2)*c(q3)*c(q4)*c(q5) + a7*s(q3)*c(q1)*c(q4)*c(q5) + a7*s(q5)*c(q1)*c(q3) + d1 + d3*c(q1) + d5*s(q1)*s(q3)*c(q2) + d5*c(q1)*c(q3) + df*s(q1)*s(q2)*s(q4)*s(q5) - df*s(q1)*s(q3)*c(q2)*c(q5) - df*s(q1)*s(q5)*c(q2)*c(q3)*c(q4) + df*s(q3)*s(q5)*c(q1)*c(q4) - df*c(q1)*c(q3)*c(q5)]], dtype=np.float64)
    else:
        assert(False)





if __name__ == "__main__":
    
    N = 1000
    
    
    # numbaなし
    q = np.array([[1., 2., 3., 4., 5., 6., 7.]]).T
    t0 = time.perf_counter()
    for i in range(N):
        q *= 0.01*np.pi
        o_0(q)
        o_1(q)
        o_2(q)
        o_3(q)
        o_4(q)
        o_5(q)
        o_6(q)
        o_ee(q)
    print("none numba  = ", time.perf_counter() - t0)
    
    q = np.array([[1., 2., 3., 4., 5., 6., 7.]]).T
    t0 = time.perf_counter()
    for i in range(N):
        q *= 0.01*np.pi
        o_0_2(q)
        o_1_2(q)
        o_2_2(q)
        o_3_2(q)
        o_4_2(q)
        o_5_2(q)
        o_6_2(q)
        o_ee_2(q)
    print("none numba2 = ", time.perf_counter() - t0)
    
    
    # numba
    q = np.array([[1., 2., 3., 4., 5., 6., 7.]]).T
    t0 = time.perf_counter()
    for i in range(N):
        q *= 0.01*np.pi
        o(q, 0, d1, d3, d5, df, a4, a5, a7)
        o(q, 1, d1, d3, d5, df, a4, a5, a7)
        o(q, 2, d1, d3, d5, df, a4, a5, a7)
        o(q, 3, d1, d3, d5, df, a4, a5, a7)
        o(q, 4, d1, d3, d5, df, a4, a5, a7)
        o(q, 5, d1, d3, d5, df, a4, a5, a7)
        o(q, 6, d1, d3, d5, df, a4, a5, a7)
        o(q, 7, d1, d3, d5, df, a4, a5, a7)
        
    print("numba =       ", time.perf_counter() - t0)


    # numba
    q = np.array([[1., 2., 3., 4., 5., 6., 7.]]).T
    t0 = time.perf_counter()
    for i in range(N):
        q *= 0.01*np.pi
        o2(q, 0, d1, d3, d5, df, a4, a5, a7)
        o2(q, 1, d1, d3, d5, df, a4, a5, a7)
        o2(q, 2, d1, d3, d5, df, a4, a5, a7)
        o2(q, 3, d1, d3, d5, df, a4, a5, a7)
        o2(q, 4, d1, d3, d5, df, a4, a5, a7)
        o2(q, 5, d1, d3, d5, df, a4, a5, a7)
        o2(q, 6, d1, d3, d5, df, a4, a5, a7)
        o2(q, 7, d1, d3, d5, df, a4, a5, a7)
        
    print("numba2 =      ", time.perf_counter() - t0)